// <auto-generated />
using System;
using DebateMeAPI.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DebateMeAPI.Migrations
{
    [DbContext(typeof(DebateMeContext))]
    partial class DebateMeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DebateMeAPI.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new { CategoryId = 1, Name = "IT/Data" }
                    );
                });

            modelBuilder.Entity("DebateMeAPI.Models.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RoomId");

                    b.Property<string>("Text");

                    b.Property<int>("UserId");

                    b.HasKey("MessageId");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Messages");

                    b.HasData(
                        new { MessageId = 1, RoomId = 1, Text = "Testar hej hej", UserId = 1 },
                        new { MessageId = 2, RoomId = 1, Text = "Testar2 hej2 hej2", UserId = 2 }
                    );
                });

            modelBuilder.Entity("DebateMeAPI.Models.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("TopicId");

                    b.HasKey("QuestionId");

                    b.HasIndex("TopicId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("DebateMeAPI.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<int>("FirstUserId");

                    b.Property<bool>("FirstUserTurn");

                    b.Property<int>("PostCount");

                    b.Property<int>("SecondUserId");

                    b.Property<int>("TopicId");

                    b.Property<int?>("UserId");

                    b.Property<int>("ViewerCount");

                    b.HasKey("RoomId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TopicId");

                    b.HasIndex("UserId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new { RoomId = 1, CategoryId = 1, FirstUserId = 1, FirstUserTurn = true, PostCount = 2, SecondUserId = 2, TopicId = 1, ViewerCount = 0 }
                    );
                });

            modelBuilder.Entity("DebateMeAPI.Models.Topic", b =>
                {
                    b.Property<int>("TopicId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId");

                    b.Property<string>("Name");

                    b.HasKey("TopicId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Topics");

                    b.HasData(
                        new { TopicId = 1, Name = "GDPR" }
                    );
                });

            modelBuilder.Entity("DebateMeAPI.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AndroidDeviceId");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("ForgotPasswordCode");

                    b.Property<string>("IosDeviceId");

                    b.Property<bool>("IsVerified");

                    b.Property<string>("LastName");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("VerficationCode");

                    b.Property<string>("WebDeviceId");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new { UserId = 1, Email = "Test@test.com", FirstName = "Anton", ForgotPasswordCode = "12345", IsVerified = true, LastName = "Nummer Ett", PasswordHash = "12345", PhoneNumber = "07012312345", VerficationCode = "12345" },
                        new { UserId = 2, Email = "Test2@test2.com", FirstName = "Anton", ForgotPasswordCode = "12345", IsVerified = true, LastName = "Nummer Två", PasswordHash = "12345", PhoneNumber = "07012312343", VerficationCode = "12345" }
                    );
                });

            modelBuilder.Entity("DebateMeAPI.Models.Message", b =>
                {
                    b.HasOne("DebateMeAPI.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DebateMeAPI.Models.User", "User")
                        .WithMany("Messages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DebateMeAPI.Models.Question", b =>
                {
                    b.HasOne("DebateMeAPI.Models.Topic")
                        .WithMany("Questions")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DebateMeAPI.Models.Room", b =>
                {
                    b.HasOne("DebateMeAPI.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DebateMeAPI.Models.Topic", "Topic")
                        .WithMany()
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DebateMeAPI.Models.User")
                        .WithMany("Room")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("DebateMeAPI.Models.Topic", b =>
                {
                    b.HasOne("DebateMeAPI.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");
                });
#pragma warning restore 612, 618
        }
    }
}
